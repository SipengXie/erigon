// Code generated by abigen. DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"fmt"
	"math/big"
	"reflect"
	"strings"

	ethereum "github.com/ledgerwatch/erigon"
	libcommon "github.com/ledgerwatch/erigon-lib/common"
	"github.com/ledgerwatch/erigon/accounts/abi"
	"github.com/ledgerwatch/erigon/accounts/abi/bind"
	"github.com/ledgerwatch/erigon/core/types"
	"github.com/ledgerwatch/erigon/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = libcommon.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = fmt.Errorf
	_ = reflect.ValueOf
)

// RootReceiverABI is the input ABI used to generate the binding from.
const RootReceiverABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_checkpointManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"received\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SEND_MESSAGE_EVENT_SIG\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpointManager\",\"outputs\":[{\"internalType\":\"contractICheckpointManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"processedExits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"inputData\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"senders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RootReceiverBin is the compiled bytecode used for deploying new contracts.
var RootReceiverBin = ""

// DeployRootReceiver deploys a new Ethereum contract, binding an instance of RootReceiver to it.
func DeployRootReceiver(auth *bind.TransactOpts, backend bind.ContractBackend, _checkpointManager libcommon.Address) (libcommon.Address, types.Transaction, *RootReceiver, error) {
	parsed, err := abi.JSON(strings.NewReader(RootReceiverABI))
	if err != nil {
		return libcommon.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, libcommon.FromHex(RootReceiverBin), backend, _checkpointManager)
	if err != nil {
		return libcommon.Address{}, nil, nil, err
	}
	return address, tx, &RootReceiver{RootReceiverCaller: RootReceiverCaller{contract: contract}, RootReceiverTransactor: RootReceiverTransactor{contract: contract}, RootReceiverFilterer: RootReceiverFilterer{contract: contract}}, nil
}

// RootReceiver is an auto generated Go binding around an Ethereum contract.
type RootReceiver struct {
	RootReceiverCaller     // Read-only binding to the contract
	RootReceiverTransactor // Write-only binding to the contract
	RootReceiverFilterer   // Log filterer for contract events
}

// RootReceiverCaller is an auto generated read-only Go binding around an Ethereum contract.
type RootReceiverCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RootReceiverTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RootReceiverTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RootReceiverFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RootReceiverFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RootReceiverSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RootReceiverSession struct {
	Contract     *RootReceiver     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RootReceiverCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RootReceiverCallerSession struct {
	Contract *RootReceiverCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// RootReceiverTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RootReceiverTransactorSession struct {
	Contract     *RootReceiverTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// RootReceiverRaw is an auto generated low-level Go binding around an Ethereum contract.
type RootReceiverRaw struct {
	Contract *RootReceiver // Generic contract binding to access the raw methods on
}

// RootReceiverCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RootReceiverCallerRaw struct {
	Contract *RootReceiverCaller // Generic read-only contract binding to access the raw methods on
}

// RootReceiverTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RootReceiverTransactorRaw struct {
	Contract *RootReceiverTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRootReceiver creates a new instance of RootReceiver, bound to a specific deployed contract.
func NewRootReceiver(address libcommon.Address, backend bind.ContractBackend) (*RootReceiver, error) {
	contract, err := bindRootReceiver(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RootReceiver{RootReceiverCaller: RootReceiverCaller{contract: contract}, RootReceiverTransactor: RootReceiverTransactor{contract: contract}, RootReceiverFilterer: RootReceiverFilterer{contract: contract}}, nil
}

// NewRootReceiverCaller creates a new read-only instance of RootReceiver, bound to a specific deployed contract.
func NewRootReceiverCaller(address libcommon.Address, caller bind.ContractCaller) (*RootReceiverCaller, error) {
	contract, err := bindRootReceiver(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RootReceiverCaller{contract: contract}, nil
}

// NewRootReceiverTransactor creates a new write-only instance of RootReceiver, bound to a specific deployed contract.
func NewRootReceiverTransactor(address libcommon.Address, transactor bind.ContractTransactor) (*RootReceiverTransactor, error) {
	contract, err := bindRootReceiver(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RootReceiverTransactor{contract: contract}, nil
}

// NewRootReceiverFilterer creates a new log filterer instance of RootReceiver, bound to a specific deployed contract.
func NewRootReceiverFilterer(address libcommon.Address, filterer bind.ContractFilterer) (*RootReceiverFilterer, error) {
	contract, err := bindRootReceiver(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RootReceiverFilterer{contract: contract}, nil
}

// bindRootReceiver binds a generic wrapper to an already deployed contract.
func bindRootReceiver(address libcommon.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RootReceiverABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RootReceiver *RootReceiverRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _RootReceiver.Contract.RootReceiverCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RootReceiver *RootReceiverRaw) Transfer(opts *bind.TransactOpts) (types.Transaction, error) {
	return _RootReceiver.Contract.RootReceiverTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RootReceiver *RootReceiverRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (types.Transaction, error) {
	return _RootReceiver.Contract.RootReceiverTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RootReceiver *RootReceiverCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _RootReceiver.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RootReceiver *RootReceiverTransactorRaw) Transfer(opts *bind.TransactOpts) (types.Transaction, error) {
	return _RootReceiver.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RootReceiver *RootReceiverTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (types.Transaction, error) {
	return _RootReceiver.Contract.contract.Transact(opts, method, params...)
}

// SENDMESSAGEEVENTSIG is a free data retrieval call binding the contract method 0x0e387de6.
//
// Solidity: function SEND_MESSAGE_EVENT_SIG() view returns(bytes32)
func (_RootReceiver *RootReceiverCaller) SENDMESSAGEEVENTSIG(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _RootReceiver.contract.Call(opts, &out, "SEND_MESSAGE_EVENT_SIG")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// SENDMESSAGEEVENTSIG is a free data retrieval call binding the contract method 0x0e387de6.
//
// Solidity: function SEND_MESSAGE_EVENT_SIG() view returns(bytes32)
func (_RootReceiver *RootReceiverSession) SENDMESSAGEEVENTSIG() ([32]byte, error) {
	return _RootReceiver.Contract.SENDMESSAGEEVENTSIG(&_RootReceiver.CallOpts)
}

// SENDMESSAGEEVENTSIG is a free data retrieval call binding the contract method 0x0e387de6.
//
// Solidity: function SEND_MESSAGE_EVENT_SIG() view returns(bytes32)
func (_RootReceiver *RootReceiverCallerSession) SENDMESSAGEEVENTSIG() ([32]byte, error) {
	return _RootReceiver.Contract.SENDMESSAGEEVENTSIG(&_RootReceiver.CallOpts)
}

// CheckpointManager is a free data retrieval call binding the contract method 0xc0857ba0.
//
// Solidity: function checkpointManager() view returns(address)
func (_RootReceiver *RootReceiverCaller) CheckpointManager(opts *bind.CallOpts) (libcommon.Address, error) {
	var out []interface{}
	err := _RootReceiver.contract.Call(opts, &out, "checkpointManager")

	if err != nil {
		return *new(libcommon.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(libcommon.Address)).(*libcommon.Address)

	return out0, err

}

// CheckpointManager is a free data retrieval call binding the contract method 0xc0857ba0.
//
// Solidity: function checkpointManager() view returns(address)
func (_RootReceiver *RootReceiverSession) CheckpointManager() (libcommon.Address, error) {
	return _RootReceiver.Contract.CheckpointManager(&_RootReceiver.CallOpts)
}

// CheckpointManager is a free data retrieval call binding the contract method 0xc0857ba0.
//
// Solidity: function checkpointManager() view returns(address)
func (_RootReceiver *RootReceiverCallerSession) CheckpointManager() (libcommon.Address, error) {
	return _RootReceiver.Contract.CheckpointManager(&_RootReceiver.CallOpts)
}

// ProcessedExits is a free data retrieval call binding the contract method 0x607f2d42.
//
// Solidity: function processedExits(bytes32 ) view returns(bool)
func (_RootReceiver *RootReceiverCaller) ProcessedExits(opts *bind.CallOpts, arg0 [32]byte) (bool, error) {
	var out []interface{}
	err := _RootReceiver.contract.Call(opts, &out, "processedExits", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ProcessedExits is a free data retrieval call binding the contract method 0x607f2d42.
//
// Solidity: function processedExits(bytes32 ) view returns(bool)
func (_RootReceiver *RootReceiverSession) ProcessedExits(arg0 [32]byte) (bool, error) {
	return _RootReceiver.Contract.ProcessedExits(&_RootReceiver.CallOpts, arg0)
}

// ProcessedExits is a free data retrieval call binding the contract method 0x607f2d42.
//
// Solidity: function processedExits(bytes32 ) view returns(bool)
func (_RootReceiver *RootReceiverCallerSession) ProcessedExits(arg0 [32]byte) (bool, error) {
	return _RootReceiver.Contract.ProcessedExits(&_RootReceiver.CallOpts, arg0)
}

// Senders is a free data retrieval call binding the contract method 0x982fb9d8.
//
// Solidity: function senders(address ) view returns(uint256)
func (_RootReceiver *RootReceiverCaller) Senders(opts *bind.CallOpts, arg0 libcommon.Address) (*big.Int, error) {
	var out []interface{}
	err := _RootReceiver.contract.Call(opts, &out, "senders", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Senders is a free data retrieval call binding the contract method 0x982fb9d8.
//
// Solidity: function senders(address ) view returns(uint256)
func (_RootReceiver *RootReceiverSession) Senders(arg0 libcommon.Address) (*big.Int, error) {
	return _RootReceiver.Contract.Senders(&_RootReceiver.CallOpts, arg0)
}

// Senders is a free data retrieval call binding the contract method 0x982fb9d8.
//
// Solidity: function senders(address ) view returns(uint256)
func (_RootReceiver *RootReceiverCallerSession) Senders(arg0 libcommon.Address) (*big.Int, error) {
	return _RootReceiver.Contract.Senders(&_RootReceiver.CallOpts, arg0)
}

// ReceiveMessage is a paid mutator transaction binding the contract method 0xf953cec7.
//
// Solidity: function receiveMessage(bytes inputData) returns()
func (_RootReceiver *RootReceiverTransactor) ReceiveMessage(opts *bind.TransactOpts, inputData []byte) (types.Transaction, error) {
	return _RootReceiver.contract.Transact(opts, "receiveMessage", inputData)
}

// ReceiveMessage is a paid mutator transaction binding the contract method 0xf953cec7.
//
// Solidity: function receiveMessage(bytes inputData) returns()
func (_RootReceiver *RootReceiverSession) ReceiveMessage(inputData []byte) (types.Transaction, error) {
	return _RootReceiver.Contract.ReceiveMessage(&_RootReceiver.TransactOpts, inputData)
}

// ReceiveMessage is a paid mutator transaction binding the contract method 0xf953cec7.
//
// Solidity: function receiveMessage(bytes inputData) returns()
func (_RootReceiver *RootReceiverTransactorSession) ReceiveMessage(inputData []byte) (types.Transaction, error) {
	return _RootReceiver.Contract.ReceiveMessage(&_RootReceiver.TransactOpts, inputData)
}

// RootReceiverReceiveMessageParams is an auto generated read-only Go binding of transcaction calldata params
type RootReceiverReceiveMessageParams struct {
	Param_inputData []byte
}

// Parse ReceiveMessage method from calldata of a transaction
//
// Solidity: function receiveMessage(bytes inputData) returns()
func ParseRootReceiverReceiveMessageParams(calldata []byte) (*RootReceiverReceiveMessageParams, error) {
	if len(calldata) <= 4 {
		return nil, fmt.Errorf("invalid calldata input")
	}

	_abi, err := abi.JSON(strings.NewReader(RootReceiverABI))
	if err != nil {
		return nil, fmt.Errorf("failed to get abi of registry metadata: %w", err)
	}

	out, err := _abi.Methods["receiveMessage"].Inputs.Unpack(calldata[4:])
	if err != nil {
		return nil, fmt.Errorf("failed to unpack receiveMessage params data: %w", err)
	}

	var paramsResult = new(RootReceiverReceiveMessageParams)
	value := reflect.ValueOf(paramsResult).Elem()

	if value.NumField() != len(out) {
		return nil, fmt.Errorf("failed to match calldata with param field number")
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return &RootReceiverReceiveMessageParams{
		Param_inputData: out0,
	}, nil
}

// RootReceiverReceivedIterator is returned from FilterReceived and is used to iterate over the raw logs and unpacked data for Received events raised by the RootReceiver contract.
type RootReceiverReceivedIterator struct {
	Event *RootReceiverReceived // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RootReceiverReceivedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RootReceiverReceived)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RootReceiverReceived)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RootReceiverReceivedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RootReceiverReceivedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RootReceiverReceived represents a Received event raised by the RootReceiver contract.
type RootReceiverReceived struct {
	Source libcommon.Address
	Amount *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterReceived is a free log retrieval operation binding the contract event 0xf11e547d796cc64acdf758e7cee90439494fd886a19159454aa61e473fdbafef.
//
// Solidity: event received(address _source, uint256 _amount)
func (_RootReceiver *RootReceiverFilterer) FilterReceived(opts *bind.FilterOpts) (*RootReceiverReceivedIterator, error) {

	logs, sub, err := _RootReceiver.contract.FilterLogs(opts, "received")
	if err != nil {
		return nil, err
	}
	return &RootReceiverReceivedIterator{contract: _RootReceiver.contract, event: "received", logs: logs, sub: sub}, nil
}

// WatchReceived is a free log subscription operation binding the contract event 0xf11e547d796cc64acdf758e7cee90439494fd886a19159454aa61e473fdbafef.
//
// Solidity: event received(address _source, uint256 _amount)
func (_RootReceiver *RootReceiverFilterer) WatchReceived(opts *bind.WatchOpts, sink chan<- *RootReceiverReceived) (event.Subscription, error) {

	logs, sub, err := _RootReceiver.contract.WatchLogs(opts, "received")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RootReceiverReceived)
				if err := _RootReceiver.contract.UnpackLog(event, "received", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseReceived is a log parse operation binding the contract event 0xf11e547d796cc64acdf758e7cee90439494fd886a19159454aa61e473fdbafef.
//
// Solidity: event received(address _source, uint256 _amount)
func (_RootReceiver *RootReceiverFilterer) ParseReceived(log types.Log) (*RootReceiverReceived, error) {
	event := new(RootReceiverReceived)
	if err := _RootReceiver.contract.UnpackLog(event, "received", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
