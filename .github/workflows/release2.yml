name: Release2
run-name: "TEST: testing new release workflow"

env:
  APPLICATION: "erigon"
  GOLANG_BUILDER_VERSION: "1.22-bullseye"
  TARGET_BASE_VERSION: "bullseye-20240701"
  PACKAGE_NAME: "github.com/erigontech/erigon"
  DOCKERHUB_REPOSITORY: "erigontech/dev-erigon"
  BUILD_TAGS: "nosqlite,noboltdb,nosilkworm"
  VERSION: "2.65.4"
  VERSION_TMP: ".."

on:
  push:
    #branches-ignore:
    #  - '**'
    branches:
      - 'feature/issue-7893'
    tags:
      ## only trigger on release tags:
      #- 'v*.*.*'
      #- 'v*.*.*-*'
  workflow_dispatch:

jobs:
  build-and-deploy-release:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v1
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current timestamp
        id: current_ts
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Debug output 1
        run: |
          pwd
          ls -lao .
          echo {GITHUB_REF#refs/tags/} > _local_GITHUB_TAG
          docker images

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ORG_DOCKERHUB_ERIGONTECH_USERNAME }}
          password: ${{ secrets.ORG_DOCKERHUB_ERIGONTECH_TOKEN }}

      - name: Get version from Github tag
        id: GetVersion
        run: echo ver=$( echo ${{ github.ref_name }} | sed -e 's,.*\/,,g' ) >> $GITHUB_OUTPUT

      - name: Get short last commit id
        id: GetShortCommitId
        run: echo "short_commit_id=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image for linux/amd64 and linux/arm64
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.NEW
          platforms: linux/amd64/v2,linux/arm64
          build-args: |
            GOLANG_BUILDER_VERSION=$GOLANG_BUILDER_VERSION
            TARGET_BASE_VERSION=$TARGET_BASE_VERSION
            BUILD_TAGS=$BUILD_TAGS
            BUILD_TIMESTAMP=${{ steps.current_ts.outputs.date }}
            VCS_REF_SHORT=${{ steps.GetShortCommitId.outputs.short_commit_id }}
            VCS_REF_LONG=${{ github.ref }}
            VERSION=${{ steps.GetVersion.outputs.ver }}
          push: true
          tags: ${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.GetVersion.outputs.ver }}

      - name: Debug output 3
        run: |
          echo "Pulling docker images for two platforms:"
          docker pull --platform linux/amd64 ${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.GetVersion.outputs.ver }}
          docker image inspect ${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.GetVersion.outputs.ver }}
          #docker pull --platform linux/arm64 ${{ env.DOCKERHUB_REPOSITORY }}:${{ steps.GetVersion.outputs.ver }}
          echo List of docker image architecture and tags
          docker image inspect --format "{{.Architecture}} {{.RepoTags}}" $(docker image ls -q)