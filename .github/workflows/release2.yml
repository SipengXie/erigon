name: Release2

env:
  APPLICATION: "erigon"
  DOCKER_REG_ADDRESS: "this"
  DOCKER_REG_USERNAME: "user"
  DOCKER_REG_PASSWORD: "password"
  GORELEASER_CROSS_VERSION: "v1.22.4"
  VERSION="2.65.4"
  VERSION_TMP=

on:
  push:
    branches-ignore:
      - '**'
    tags:
      ## only trigger on release tags:
      #- 'v*.*.*'
      #- 'v*.*.*-*'
  workflow_dispatch:

jobs:
  build-and-deploy-release:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v1
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Debug output 1
        run: |
          echo {GITHUB_REF#refs/tags/} > _local_GITHUB_TAG
          docker images
          docker rmi $(docker images 'node' -a -q)
          docker images

      - name: Get version from Github tag
        id: GetVersion
        run: echo ver=${{ github.ref_name }} >> $GITHUB_OUTPUT

      - name: Run goreleaser container
        run: |
          docker run \
            --rm \
            --privileged \
            -e CGO_ENABLED=1 \
            -e GITHUB_TOKEN \
            -e DOCKER_USERNAME \
            -e DOCKER_PASSWORD \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/go/src/$(PACKAGE_NAME) \
            -w /go/src/$(PACKAGE_NAME) \
            ghcr.io/goreleaser/goreleaser-cross:${GORELEASER_CROSS_VERSION} \
            build --clean --skip=validate --verbose

      - name: Debug output 2
        run: |
          find ./dist -ls

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ vars.DOCKER_REG_ADDRESS }}/${{ vars.APPLICATION }}:${{ steps.GetVersion.outputs.ver }}