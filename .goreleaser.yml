#version: 2

project_name: erigon

release:
  disable: true
  draft: true
  prerelease: auto

env:
  - CGO_ENABLED=1

builds:

## Darwin AMD64:
  - id: darwin-amd64-erigon
    main: ./cmd/erigon
    binary: erigon
    goos: [ darwin ]
    goarch: [ amd64 ]
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-amd64-downloader
    main: ./cmd/downloader
    binary: downloader
    goos: [ darwin ]
    goarch: [ amd64 ]
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-amd64-devnet
    main: ./cmd/devnet
    binary: devenet
    goos: [ darwin ]
    goarch: [ amd64 ]
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-amd64-evm
    main: ./cmd/evm
    binary: evm
    goos: [ darwin ]
    goarch: [ amd64 ]
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-amd64-caplin
    main: ./cmd/caplin
    binary: caplin
    goos: [ darwin ]
    goarch: [ amd64 ]
    env:
      - CC=o64-clang
      - CXX=o64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

## END of Darwin AMD64.

## Darwin ARM64:
  - id: darwin-arm64-erigon
    main: ./cmd/erigon
    binary: erigon
    goos: [ darwin ]
    goarch: [ arm64 ]
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-arm64-downloader
    main: ./cmd/downloader
    binary: downloader
    goos: [ darwin ]
    goarch: [ arm64 ]
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-arm64-devnet
    main: ./cmd/devnet
    binary: devnet
    goos: [ darwin ]
    goarch: [ arm64 ]
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-arm64-evm
    main: ./cmd/evm
    binary: evm
    goos: [ darwin ]
    goarch: [ arm64 ]
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: darwin-arm64-caplin
    main: ./cmd/caplin
    binary: caplin
    goos: [ darwin ]
    goarch: [ arm64 ]
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w
## END of Darwin ARM64.

## Linux AMD64:
  - id: linux-amd64-erigon
    main: ./cmd/erigon
    binary: erigon
    goos: [ linux ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-amd64-downloader
    main: ./cmd/downloader
    binary: downloader
    goos: [ linux ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-amd64-devnet
    main: ./cmd/devnet
    binary: devnet
    goos: [ linux ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-amd64-evm
    main: ./cmd/evm
    binary: evm
    goos: [ linux ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-amd64-caplin
    main: ./cmd/caplin
    binary: caplin
    goos: [ linux ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-linux-gnu-gcc
      - CXX=x86_64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

## End of Linux AMD64.

## Linux ARM64
  - id: linux-arm64-erigon
    main: ./cmd/erigon
    binary: erigon
    goos: [ linux ]
    goarch: [ arm64 ]
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-arm64-downloader
    main: ./cmd/downloader
    binary: downloader
    goos: [ linux ]
    goarch: [ arm64 ]
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-arm64-devnet
    main: ./cmd/devnet
    binary: devnet
    goos: [ linux ]
    goarch: [ arm64 ]
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-arm64-evm
    main: ./cmd/evm
    binary: evm
    goos: [ linux ]
    goarch: [ arm64 ]
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

  - id: linux-arm64-caplin
    main: ./cmd/caplin
    binary: caplin
    goos: [ linux ]
    goarch: [ arm64 ]
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w -extldflags "-static" # We need to build a static binary because we are building in a glibc based system and running in a musl container

## End of Linux ARM64.

## Windows AMD64
  - id: windows-amd64-erigon
    main: ./cmd/erigon
    binary: erigon
    goos: [ windows ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: windows-amd64-downloader
    main: ./cmd/downloader
    binary: downloader
    goos: [ windows ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: windows-amd64-devnet
    main: ./cmd/devnet
    binary: devnet
    goos: [ windows ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: windows-amd64-evm
    main: ./cmd/evm
    binary: evm
    goos: [ windows ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

  - id: windows-amd64-caplin
    main: ./cmd/caplin
    binary: caplin
    goos: [ windows ]
    goarch: [ amd64 ]
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    tags: [ nosqlite, noboltdb, nosilkworm ]
    ldflags: -s -w

## End of Windows AMD64

archives:
  - id: darwin-amd64
    builds:
      - darwin-amd64-erigon
      - darwin-amd64-downloader
      - darwin-amd64-devnet
      - darwin-amd64-evm
      - darwin-amd64-caplin
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: true
    format: tar.gz
  
  - id: darwin-arm64
    builds:
      - darwin-arm64-erigon
      - darwin-arm64-downloader
      - darwin-arm64-devnet
      - darwin-arm64-evm
      - darwin-arm64-caplin
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: true
    format: tar.gz